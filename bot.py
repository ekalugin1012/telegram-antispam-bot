import os
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# üîë –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
BOT_TOKEN = "7476373145:AAHsOrXOnRwkatvt9ues6-i9n2i6BZb6k_A"

KEYWORDS = [
    "–ø—Ä–∏—à–ª—é –∑–∞ —Å–ø–∞—Å–∏–±–æ",
    "–≤—ã—à–ª—é –≤ –ª—Å",
    "–Ω–∞–ø–∏—à–∏ –≤ –ª—Å",
    "–¥–∞–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
    "–ø–æ–ª—É—á–∏ –∫—É—Ä—Å",
    "–ø—Ä–∏—à–ª—é –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
    "–Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–ª –∫–Ω–∏–≥—É",
    "–≤—ã—à–ª—é —á–µ–∫-–ª–∏—Å—Ç",
    "—Å–∫–∞—á–∞—Ç—å –≥–∞–π–¥",
    "–Ω–∞–ø–∏—à–∏ –ø–ª—é—Å–∏–∫",
    "–Ω–∞–ø–∏—à–∏ +",
    "–∑–∞–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫",
    "—Å—Å—ã–ª–∫–∞ –≤ –ª—Å",
    "–ø–µ—Ä–µ—à–ª—é –º–∞—Ç–µ—Ä–∏–∞–ª",
    "–ø—Ä–∏—à–ª—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
    "–Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—à—ë–ª –∫—É—Ä—Å",
    "–ø—Ä–∏—à–ª—é –∫—É—Ä—Å",
    "–≤—ã—à–ª—é –≥–∞–π–¥",
    "—Å—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
    "–æ—Ç–¥–∞–º –∫—É—Ä—Å"
]

# üî† –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ª–∞—Ç–∏–Ω–∏—Ü—ã
def normalize_text(text):
    substitutions = {
        "a": "–∞", "e": "–µ", "o": "–æ", "c": "—Å", "p": "—Ä", "y": "—É", "x": "—Ö", "b": "–≤", "h": "–Ω", "k": "–∫", "m": "–º", "t": "—Ç",
        "A": "–ê", "B": "–í", "C": "–°", "E": "–ï", "H": "–ù", "K": "–ö", "M": "–ú", "O": "–û", "P": "–†", "T": "–¢", "X": "–•", "Y": "–£"
    }
    for latin, cyrillic in substitutions.items():
        text = text.replace(latin, cyrillic)
    return text.lower()

def contains_spam(text):
    normalized = normalize_text(text)
    for kw in KEYWORDS:
        if kw in normalized:
            return True
    return False

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        if contains_spam(update.message.text):
            try:
                await update.message.delete()
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

async def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
